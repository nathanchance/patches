From eeeeaf4cd4c8e38c1fe0bf51463431ffcd76ad2a Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Thu, 24 Mar 2022 16:37:08 -0700
Subject: [PATCH 11/16] HACK: Revert "samples/seccomp: Improve arch hints"

This reverts commit b5caa8dd9cc8ad5126f06e9266c326d38a1fc6d2.

Link: https://lore.kernel.org/r/CAHk-=whtmuyBzuHULNWcP3==ixcb8yCb-QVEokZeDJESG_TEbA@mail.gmail.com/
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
---
 samples/seccomp/dropper.c | 84 +++++----------------------------------
 1 file changed, 11 insertions(+), 73 deletions(-)

diff --git a/samples/seccomp/dropper.c b/samples/seccomp/dropper.c
index bb4f7e762ff7..4bca4b70f665 100644
--- a/samples/seccomp/dropper.c
+++ b/samples/seccomp/dropper.c
@@ -15,59 +15,15 @@
  */
 
 #include <errno.h>
-#include <signal.h>
-#include <stddef.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <unistd.h>
-#include <sys/prctl.h>
-#include <sys/ptrace.h>
-#include <sys/types.h>
-#include <sys/wait.h>
 #include <linux/audit.h>
 #include <linux/filter.h>
-#include <linux/ptrace.h>
 #include <linux/seccomp.h>
 #include <linux/unistd.h>
-
-static unsigned int get_syscall_arch(void)
-{
-	struct ptrace_syscall_info info = { };
-	siginfo_t siginfo = { };
-	unsigned int arch = -1;
-	pid_t pid = fork();
-
-	if (pid < 0)
-		return -1;
-	if (pid == 0) {
-		if (ptrace(PTRACE_TRACEME, 0, 0, 0) != 0) {
-			perror("PTRACE_TRACEME");
-			_exit(1);
-		}
-		if (raise(SIGSTOP) != 0) {
-			perror("raise");
-			_exit(1);
-		}
-		_exit(0);
-	}
-	if (ptrace(PTRACE_ATTACH, pid, 0, 0) != 0)
-		goto reap;
-	if (waitid(P_PID, pid, &siginfo, WEXITED | WSTOPPED | WCONTINUED) != 0)
-		goto reap;
-	if (siginfo.si_code != CLD_STOPPED &&
-	    siginfo.si_code != CLD_TRAPPED)
-		goto reap;
-	if (ptrace(PTRACE_GET_SYSCALL_INFO, pid, sizeof(info), &info)
-	    < offsetof(typeof(info), arch) + sizeof(info.arch))
-		goto reap;
-	arch = info.arch;
-	ptrace(PTRACE_DETACH, pid, 0, 0);
-reap:
-	kill(pid, SIGKILL);
-	if (waitpid(pid, NULL, 0) != pid)
-		perror("waitpid");
-	return arch;
-}
+#include <stdio.h>
+#include <stddef.h>
+#include <stdlib.h>
+#include <sys/prctl.h>
+#include <unistd.h>
 
 static int install_filter(int arch, int nr, int error)
 {
@@ -101,33 +57,15 @@ static int install_filter(int arch, int nr, int error)
 	return 0;
 }
 
-#define hint(arch)	do {				\
-	fprintf(stderr, "\t  " #arch ":\t0x%X", arch);	\
-	if (arch == native) {				\
-		fprintf(stderr, " (native)");		\
-		seen = 1;				\
-	}						\
-	fprintf(stderr, "\n");				\
-} while (0)
-
 int main(int argc, char **argv)
 {
 	if (argc < 5) {
-		int seen = 0;
-		unsigned int native;
-
-		fprintf(stderr, "Usage: "
-			"dropper <arch> <syscall_nr> [-1|<errno>] <prog> [<args>]\n"
-			"arch: linux/audit.h AUDIT_ARCH_* for filter\n\tHint:\n");
-		native = get_syscall_arch();
-		hint(AUDIT_ARCH_X86_64);
-		hint(AUDIT_ARCH_I386);
-		hint(AUDIT_ARCH_AARCH64);
-		hint(AUDIT_ARCH_ARM);
-		if (!seen)
-			fprintf(stderr, "\t  native:\t\t0x%X\n", native);
-		fprintf(stderr,
-			"errno: errno to set or -1 to perform SECCOMP_RET_KILL\n");
+		fprintf(stderr, "Usage:\n"
+			"dropper <arch> <syscall_nr> <errno> <prog> [<args>]\n"
+			"Hint:	AUDIT_ARCH_I386: 0x%X\n"
+			"	AUDIT_ARCH_X86_64: 0x%X\n"
+			"	errno == -1 means SECCOMP_RET_KILL\n"
+			"\n", AUDIT_ARCH_I386, AUDIT_ARCH_X86_64);
 		return 1;
 	}
 	if (install_filter(strtol(argv[1], NULL, 0), strtol(argv[2], NULL, 0),
-- 
2.35.1


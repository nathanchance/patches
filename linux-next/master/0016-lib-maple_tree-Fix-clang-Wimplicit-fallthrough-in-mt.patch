From 1f35d003685918eee6a3ab7ad36b3e050b796772 Mon Sep 17 00:00:00 2001
From: Nathan Chancellor <nathan@kernel.org>
Date: Thu, 24 Feb 2022 09:17:05 -0700
Subject: [PATCH 16/26] lib/maple_tree: Fix clang -Wimplicit-fallthrough in
 mte_set_pivot()

Clang warns:

  lib/maple_tree.c:764:2: error: unannotated fall-through between switch labels [-Werror,-Wimplicit-fallthrough]
          case maple_dense:
          ^
  lib/maple_tree.c:764:2: note: insert 'break;' to avoid fall-through
          case maple_dense:
          ^
          break;
  1 error generated.

Clang is a little more pedantic than GCC, which does not warn when
falling through to a case that is just break or return. Clang's version
is more in line with the kernel's own stance in deprecated.rst, which
states that all switch/case blocks must end in either break,
fallthrough, continue, goto, or return. Add the missing break to silence
the warning.

Link: https://github.com/ClangBuiltLinux/linux/issues/1604
Signed-off-by: Nathan Chancellor <nathan@kernel.org>
Link: https://lore.kernel.org/r/20220224161705.1937458-1-nathan@kernel.org
---
 lib/maple_tree.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/lib/maple_tree.c b/lib/maple_tree.c
index 5132495f86a6..5d8c39cbd517 100644
--- a/lib/maple_tree.c
+++ b/lib/maple_tree.c
@@ -761,6 +761,7 @@ static inline void mte_set_pivot(struct maple_enode *mn, unsigned char piv,
 		break;
 	case maple_arange_64:
 		(&node->ma64)->pivot[piv] = val;
+		break;
 	case maple_dense:
 		break;
 	}
-- 
2.35.1

